{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/components/elements/Modal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  children: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  closeHidden: PropTypes.bool,\n  video: PropTypes.string,\n  videoTag: PropTypes.oneOf(['iframe', 'video'])\n};\nconst defaultProps = {\n  children: null,\n  show: false,\n  closeHidden: false,\n  video: '',\n  videoTag: 'iframe'\n};\nclass Modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.handleBodyClass = () => {\n      if (document.querySelectorAll('.modal.is-active').length) {\n        document.body.classList.add('modal-is-active');\n      } else {\n        document.body.classList.remove('modal-is-active');\n      }\n    };\n    this.keyPress = e => {\n      e.keyCode === 27 && this.props.handleClose(e);\n    };\n    this.stopProgagation = e => {\n      e.stopPropagation();\n    };\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyPress);\n    document.addEventListener('click', this.stopProgagation);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyPress);\n    document.removeEventListener('click', this.stopProgagation);\n  }\n  componentDidUpdate(prevProps) {\n    prevProps.show !== this.props.show && this.handleBodyClass();\n  }\n  render() {\n    const {\n      className,\n      children,\n      handleClose,\n      show,\n      closeHidden,\n      video,\n      videoTag,\n      ...props\n    } = this.props;\n    const classes = classNames('modal', show && 'is-active', video && 'modal-video', className);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: show && /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        className: classes,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-inner\",\n          onClick: this.stopProgagation,\n          children: video ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"responsive-video\",\n            children: videoTag === 'iframe' ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: \"video\",\n              src: video,\n              frameBorder: \"0\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n              \"v-else\": true,\n              controls: true,\n              src: video\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [!closeHidden && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              \"aria-label\": \"close\",\n              onClick: handleClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nexport default Modal;","map":{"version":3,"names":["React","PropTypes","classNames","jsxDEV","_jsxDEV","propTypes","children","node","handleClose","func","isRequired","show","bool","closeHidden","video","string","videoTag","oneOf","defaultProps","Modal","Component","constructor","args","state","handleBodyClass","document","querySelectorAll","length","body","classList","add","remove","keyPress","e","keyCode","props","stopProgagation","stopPropagation","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","className","classes","Fragment","onClick","title","src","frameBorder","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","controls"],"sources":["/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/components/elements/Modal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst propTypes = {\n  children: PropTypes.node,\n  handleClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n  closeHidden: PropTypes.bool,\n  video: PropTypes.string,\n  videoTag: PropTypes.oneOf(['iframe', 'video'])\n}\n\nconst defaultProps = {\n  children: null,\n  show: false,\n  closeHidden: false,\n  video: '',\n  videoTag: 'iframe'\n}\n\nclass Modal extends React.Component {\n\n  state = {};\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keyPress);\n    document.addEventListener('click', this.stopProgagation);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keyPress);\n    document.removeEventListener('click', this.stopProgagation);\n  }\n\n  componentDidUpdate(prevProps) {\n    (prevProps.show !== this.props.show) && this.handleBodyClass();\n  }\n\n  handleBodyClass = () => {\n    if (document.querySelectorAll('.modal.is-active').length) {\n      document.body.classList.add('modal-is-active');\n    } else {\n      document.body.classList.remove('modal-is-active');\n    }\n  }\n\n  keyPress = (e) => {\n    e.keyCode === 27 && this.props.handleClose(e);\n  }\n\n  stopProgagation = (e) => {\n    e.stopPropagation();\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      handleClose,\n      show,\n      closeHidden,\n      video,\n      videoTag,\n      ...props\n    } = this.props;\n\n    const classes = classNames(\n      'modal',\n      show && 'is-active',\n      video && 'modal-video',\n      className\n    );\n\n    return (\n      <React.Fragment>\n        {show &&\n          <div\n            {...props}\n            className={classes}\n            onClick={handleClose}\n          >\n            <div className=\"modal-inner\" onClick={this.stopProgagation}>\n              {video ?\n                <div className=\"responsive-video\">\n                  {videoTag === 'iframe' ?\n                    <iframe\n                      title=\"video\"\n                      src={video}\n                      frameBorder=\"0\"\n                      allowFullScreen\n                    ></iframe> :\n                    <video\n                      v-else\n                      controls\n                      src={video}\n                    ></video>\n                  }\n                </div> :\n                <React.Fragment>\n                  {!closeHidden &&\n                    <button\n                      className=\"modal-close\"\n                      aria-label=\"close\"\n                      onClick={handleClose}\n                    ></button>\n                  }\n                  <div className=\"modal-content\">\n                    {children}\n                  </div>\n                </React.Fragment>\n              }\n            </div>\n          </div>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\n\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}