{"ast":null,"code":"var _jsxFileName = \"/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/pages/mailverificado/mailverificado.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from 'antd';\nimport { CheckCircleOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './mailverificado.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MailVerificado = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/verify-email/${token}`, {\n          method: 'GET'\n        });\n        if (response.ok) {\n          console.log('Correo electrónico verificado con éxito');\n        } else if (response.status === 400) {\n          console.log('Correo electrónico ya verificado');\n        } else if (response.status === 404) {\n          console.log('token no encontrado');\n        } else {\n          console.log('Ocurrió un error al verificar el correo electrónico');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        console.log('Ocurrió un error al verificar el correo electrónico');\n      }\n    };\n    verifyEmail();\n  });\n  const Continuar = () => {\n    if (localStorage.getItem('token') === \"\" || localStorage.getItem('token') === null) {\n      navigate('/login');\n    } else {\n      navigate('/perfil');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification-content\",\n      children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n        className: \"verification-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"verification-title\",\n        children: \"\\xA1Verificaci\\xF3n exitosa!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-0 mb-32\",\n        children: \"Tu correo electr\\xF3nico ha sido verificado con \\xE9xito. Ahora puedes continuar usando nuestra plataforma.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"button button-primary button-wide-mobile button-sm\",\n        onClick: Continuar,\n        children: \"Continuar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MailVerificado, \"JbmJK2wEt8ghbj+APGEiV8KstDw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MailVerificado;\nexport default MailVerificado;\nvar _c;\n$RefreshReg$(_c, \"MailVerificado\");","map":{"version":3,"names":["React","Button","CheckCircleOutlined","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","MailVerificado","_s","token","navigate","verifyEmail","response","fetch","method","ok","console","log","status","error","Continuar","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/pages/mailverificado/mailverificado.jsx"],"sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport { CheckCircleOutlined } from '@ant-design/icons';\nimport { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './mailverificado.scss'; \n\nconst MailVerificado = () => {\n  const { token } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyEmail = async () => {\n      try {\n          const response = await fetch(`http://localhost:8000/api/verify-email/${token}`, {\n              method: 'GET',\n          });\n          if (response.ok) {\n            console.log('Correo electrónico verificado con éxito');\n          } else if (response.status === 400) {\n            console.log('Correo electrónico ya verificado');\n          } else if (response.status === 404) {\n            console.log('token no encontrado');\n          } else {\n              console.log('Ocurrió un error al verificar el correo electrónico');\n          }\n      } catch (error) {\n          console.error('Error:', error);\n          console.log('Ocurrió un error al verificar el correo electrónico');\n      }\n  };\n  verifyEmail();\n\n  });\n  const Continuar = () => {\n    if (localStorage.getItem('token') === \"\" || localStorage.getItem('token') === null) {\n      navigate('/login'); \n    }else{\n      navigate('/perfil');\n    }\n  }\n  return (\n    <div className=\"verification-container\">\n      <div className=\"verification-content\">\n        <CheckCircleOutlined className=\"verification-icon\" />\n        <h1 className=\"verification-title\">¡Verificación exitosa!</h1>\n        <p className=\"mt-0 mb-32\">\n          Tu correo electrónico ha sido verificado con éxito. Ahora puedes continuar usando nuestra plataforma.\n        </p>\n        <Button type=\"primary\" className=\"button button-primary button-wide-mobile button-sm\" onClick={Continuar}>\n          Continuar\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MailVerificado;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,MAAM;AAC7B,SAASC,mBAAmB,QAAQ,mBAAmB;AACvD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCJ,KAAM,EAAC,EAAE;UAC5EK,MAAM,EAAE;QACZ,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACfC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;QACxD,CAAC,MAAM,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;UAClCF,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QACjD,CAAC,MAAM,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;UAClCF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QACtE;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BH,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;MACtE;IACJ,CAAC;IACDN,WAAW,CAAC,CAAC;EAEb,CAAC,CAAC;EACF,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;MAClFZ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAI;MACHA,QAAQ,CAAC,SAAS,CAAC;IACrB;EACF,CAAC;EACD,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrClB,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnClB,OAAA,CAACL,mBAAmB;QAACsB,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDtB,OAAA;QAAIiB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DtB,OAAA;QAAGiB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAE1B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJtB,OAAA,CAACN,MAAM;QAAC6B,IAAI,EAAC,SAAS;QAACN,SAAS,EAAC,oDAAoD;QAACO,OAAO,EAAEV,SAAU;QAAAI,QAAA,EAAC;MAE1G;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/CID,cAAc;EAAA,QACAJ,SAAS,EACVC,WAAW;AAAA;AAAA2B,EAAA,GAFxBxB,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}