{"ast":null,"code":"// services/apiService.js\n\nconst STATUS_NO_CONTENT = 201;\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\nconst getToken = () => {\n  return 'Token ' + localStorage.getItem('token');\n};\nconst getSchoolId = () => {\n  return sessionStorage.getItem('actual_school');\n};\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || \"Algo salió mal\");\n  }\n  if (response.status === STATUS_NO_CONTENT) {\n    return null;\n  }\n\n  // verifica si tiene contenido\n  const contentType = response.headers.get(\"Content-Type\");\n  if (!contentType) {\n    return null;\n  }\n  return response.json();\n};\nexport const fetchData = async (endpoint, params = {}) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/${endpoint}`);\n\n    // Armar los filtros\n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        url.searchParams.append(key, params[key]);\n      }\n    });\n    const response = await fetch(url.toString(), {\n      method: \"GET\",\n      headers: {\n        'Authorization': getToken(),\n        'School-ID': getSchoolId()\n      }\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const postData = async (endpoint, data) => {\n  return saveData(endpoint, data, \"POST\");\n};\nexport const putData = async (endpoint, data) => {\n  return saveData(endpoint, data, \"PUT\");\n};\nexport const saveData = async (endpoint, data, method) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': getToken(),\n        'School-ID': getSchoolId()\n      },\n      body: JSON.stringify(data)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteData = async (endpoint, pk, data = null) => {\n  let url = `${API_BASE_URL}/${endpoint}/`;\n  if (pk) {\n    url = url + `${pk}/`;\n  }\n  try {\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': getToken(),\n        'School-ID': getSchoolId(),\n        \"Content-Type\": \"application/json\"\n      },\n      ...(data && {\n        body: JSON.stringify(data)\n      })\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchLogin = async data => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["STATUS_NO_CONTENT","API_BASE_URL","getToken","localStorage","getItem","getSchoolId","sessionStorage","handleResponse","response","ok","error","text","Error","status","contentType","headers","get","json","fetchData","endpoint","params","url","URL","Object","keys","forEach","key","searchParams","append","fetch","toString","method","postData","data","saveData","putData","body","JSON","stringify","deleteData","pk","fetchLogin"],"sources":["/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/services/apiService.js"],"sourcesContent":["// services/apiService.js\n\nconst STATUS_NO_CONTENT = 201\n\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\n\nconst getToken = () => {\n    return 'Token ' + localStorage.getItem('token');\n}\n\nconst getSchoolId = () => {\n    return sessionStorage.getItem('actual_school');\n} \n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || \"Algo salió mal\");\n  }\n\n  if (response.status === STATUS_NO_CONTENT) {\n    return null;\n  }\n\n  // verifica si tiene contenido\n  const contentType = response.headers.get(\"Content-Type\");\n  if (!contentType) {\n    return null\n  } \n\n  return response.json();\n};\n\nexport const fetchData = async (endpoint, params={}) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/${endpoint}`);\n\n    // Armar los filtros\n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        url.searchParams.append(key, params[key]);\n      }\n    });\n    \n    const response = await fetch(url.toString(), {\n      method: \"GET\",\n      headers: {\n        'Authorization': getToken(),\n        'School-ID': getSchoolId()\n      }\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const postData = async (endpoint, data) => {\n  return saveData(endpoint, data, \"POST\");\n}\n\nexport const putData = async (endpoint, data) => {\n  return saveData(endpoint, data, \"PUT\");\n}\n\nexport const saveData = async (endpoint, data, method) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': getToken(),\n        'School-ID': getSchoolId()\n      },\n      body: JSON.stringify(data),\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteData = async (endpoint, pk, data = null) => {\n  let url = `${API_BASE_URL}/${endpoint}/`\n  if (pk) {\n    url = url + `${pk}/`\n  }\n  try {\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': getToken(),\n        'School-ID': getSchoolId(),\n        \"Content-Type\": \"application/json\" \n      },\n      ...(data && { body: JSON.stringify(data) })\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const fetchLogin = async (data) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}