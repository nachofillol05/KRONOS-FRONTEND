{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport './PrivateRoute.scss';\nconst DirectiveRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [mailVerified, setMailVerified] = useState(null);\n  const navigate = useNavigate();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [school, setSchool] = useState(sessionStorage.getItem('actual_school'));\n  if (token === \"\" || token === null) {\n    navigate('/');\n  }\n  useEffect(() => {\n    const verifyToken = async () => {\n      try {\n        const tokenResponse = await fetch('http://localhost:8000/api/verifyToken/', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"token\": localStorage.getItem('token')\n          })\n        });\n        if (tokenResponse.ok) {\n          const userResponse = await fetch('http://127.0.0.1:8000/api/isVerified/', {\n            method: \"GET\",\n            headers: {\n              'Authorization': 'Token ' + token,\n              'School-ID': school\n            }\n          });\n          const userData = await userResponse.json();\n          setMailVerified(userData.user_is_verified);\n          if (userData.user_is_verified) {\n            const rolesResponse = await fetch('http://127.0.0.1:8000/api/school/myroles/', {\n              method: \"GET\",\n              headers: {\n                'Authorization': 'Token ' + token,\n                'School-ID': school\n              }\n            });\n            const rolesData = await rolesResponse.json();\n            if (sessionStorage.getItem('rol') === \"Directivo\" && JSON.stringify(rolesData).includes(\"Directivo\") || sessionStorage.getItem('rol') === \"Preceptor\" && JSON.stringify(rolesData).includes(\"Preceptor\")) {\n              setIsAuthenticated(true);\n              localStorage.setItem('user', true);\n            } else {\n              setIsAuthenticated(false);\n            }\n          } else {\n            setMailVerified(false);\n          }\n        } else {\n          setIsAuthenticated(false);\n          navigate('/');\n        }\n      } catch (error) {\n        console.error('Error verifying token:', error);\n        setIsAuthenticated(false);\n        navigate('/');\n      }\n    };\n    verifyToken();\n  }, [navigate, token, school]);\n  if (isAuthenticated === null || mailVerified === null) {\n    return null;\n  }\n  if (isAuthenticated && mailVerified) {\n    return children;\n  } else if (!isAuthenticated) {\n    navigate('/perfil');\n  } else {\n    navigate('/mailenviado');\n  }\n};\n_s(DirectiveRoute, \"/BHQNhYyrbxco6sRdQfz8Rt/qpo=\", false, function () {\n  return [useNavigate];\n});\n_c = DirectiveRoute;\nexport default DirectiveRoute;\nvar _c;\n$RefreshReg$(_c, \"DirectiveRoute\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Spin","DirectiveRoute","children","_s","isAuthenticated","setIsAuthenticated","mailVerified","setMailVerified","navigate","token","setToken","localStorage","getItem","school","setSchool","sessionStorage","verifyToken","tokenResponse","fetch","method","headers","body","JSON","stringify","ok","userResponse","userData","json","user_is_verified","rolesResponse","rolesData","includes","setItem","error","console","_c","$RefreshReg$"],"sources":["/home/augusto/Escritorio/KRONOS-FRONTEND/Front/react_kronos/src/components/privateRoute/directiveRoute.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport './PrivateRoute.scss'; \n\nconst DirectiveRoute = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\n    const [mailVerified, setMailVerified] = useState(null);\n    const navigate = useNavigate();\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [school, setSchool] = useState(sessionStorage.getItem('actual_school'));\n\n    if (token === \"\" || token === null) {\n        navigate('/');\n    }\n\n    useEffect(() => {\n        const verifyToken = async () => {\n            try {\n                const tokenResponse = await fetch('http://localhost:8000/api/verifyToken/', {\n                    method: \"POST\",\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"token\": localStorage.getItem('token'),\n                    })\n                });\n\n                if (tokenResponse.ok) {\n                    const userResponse = await fetch('http://127.0.0.1:8000/api/isVerified/', {\n                        method: \"GET\",\n                        headers: {\n                            'Authorization': 'Token ' + token,\n                            'School-ID': school,\n                        },\n                    });\n                    const userData = await userResponse.json();\n                    setMailVerified(userData.user_is_verified);\n\n                    if (userData.user_is_verified) {\n                        const rolesResponse = await fetch('http://127.0.0.1:8000/api/school/myroles/', {\n                            method: \"GET\",\n                            headers: {\n                                'Authorization': 'Token ' + token,\n                                'School-ID': school,\n                            },\n                        });\n                        const rolesData = await rolesResponse.json();\n\n                        if ((sessionStorage.getItem('rol') === \"Directivo\" && JSON.stringify(rolesData).includes(\"Directivo\")) ||\n                            (sessionStorage.getItem('rol') === \"Preceptor\" && JSON.stringify(rolesData).includes(\"Preceptor\"))) {\n                            setIsAuthenticated(true);\n                            localStorage.setItem('user', true);\n                        } else {\n                            setIsAuthenticated(false);\n                        }\n                    } else {\n                        setMailVerified(false);\n                    }\n                } else {\n                    setIsAuthenticated(false);\n                    navigate('/');\n                }\n            } catch (error) {\n                console.error('Error verifying token:', error);\n                setIsAuthenticated(false);\n                navigate('/');\n            }\n        };\n\n        verifyToken();\n    }, [navigate, token, school]);\n\n    if (isAuthenticated === null || mailVerified === null) {\n        return (\n            null\n        );\n    }\n\n    if (isAuthenticated && mailVerified) {\n        return children;\n    } else if (!isAuthenticated) {\n        navigate('/perfil');\n    } else {\n        navigate('/mailenviado');\n    }\n};\n\nexport default DirectiveRoute;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}